syntax = "proto3";

package tendermint.types;
option  go_package = "github.com/tendermint/tendermint/types";

import "third_party/proto/gogoproto/gogo.proto";
import "third_party/proto/cosmos-proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

// BlockIdFlag indicates which BlcokID the signature is for
enum BlockIDFlag {
  option (gogoproto.goproto_enum_prefix) = false;
  blockdIDFlagUnknown                    = 0;
  BlockIDFlagAbsent                      = 1;
  BlockIDFlagCommit                      = 2;
  BlockIDFlagNil                         = 3;
}

// SignedMsgType is a type of signed message in the consensus.
enum SignedMsgType {
  option (gogoproto.goproto_enum_prefix) = false;
  SignedMsgTypeUnknown                   = 0;
  PrevoteType                            = 1;
  PrecommitType                          = 2;
  ProposalType                           = 3;
}

// PartsetHeader
message PartSetHeader {
  int32 total = 1;
  bytes hash  = 2;
}

// BlockID
message BlockID {
  bytes         hash         = 1;
  PartSetHeader parts_header = 2 [(gogoproto.nullable) = false];
}

// --------------------------------

// Block Header
message Header {
  // basic block info
  Version                   version  = 1 [(gogoproto.nullable) = false];
  string                    chain_id = 2 [(gogoproto.customname) = "ChainID"];
  int64                     height   = 3;
  google.protobuf.Timestamp time     = 4 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // prev block info
  BlockID last_block_id = 5 [(gogoproto.nullable) = false, (gogoproto.customname) = "LastBlockID"];

  // hashes of block data
  bytes last_commit_hash = 6;  // commit from validators from the last block
  bytes data_hash        = 7;  // transactions

  // hashes from the app output from the prev block
  bytes validators_hash = 8 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];  // validators for the current block
  bytes next_validators_hash = 9 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];  // validators for the next block
  bytes consensus_hash = 10 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];  // consensus params for current block
  bytes app_hash = 11 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];  // state after txs from the previous block
  bytes last_results_hash = 12 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];  // root hash of all results from the txs from the previous block

  // consensus info
  bytes evidence_hash = 13 [
    (gogoproto.nullable)   = false,
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"
  ];                            // evidence included in the block
  bytes proposer_address = 14;  // original proposer of the block
}

message Version {
  uint64 block = 1;
  uint64 app   = 2;
}

message Data {
  // Txs that will be applied by state @ block.Height+1.
  // NOTE: not all txs here are valid.  We're just agreeing on the order first.
  // This means that block.AppHash does not include these txs.
  bytes Txs = 1 [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Txs"];
  // Volatile
  bytes hash = 2 [(gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes"];
}

// Vote represents a prevote, precommit, or commit vote from validators for
// consensus.
message Vote {
  SignedMsgType type     = 1;
  int64         height   = 2;
  int32         round    = 3;
  BlockID       block_id = 4
      [(gogoproto.customname) = 'BlockID', (gogoproto.nullable) = false];  // zero if vote is nil.
  google.protobuf.Timestamp timestamp = 5
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
  bytes validator_address = 6 [
    (gogoproto.customtype) = "github.com/tendermint/tendermint/crypto.Address",
    (gogoproto.nullable)   = false
  ];
  int32 validator_index = 7;  // TODO: double check what size can be used
  bytes signature       = 8;
}

message DuplicateEvidence {
  // crypto.Pubkey pub_key = 1;
  Vote vota_a = 1;
  Vote vote_b = 2;
}

message Evidence {
  option (cosmos_proto.interface_type) = "*github.com/tendermint/tendermint/types.Evidence";
  oneof sum {
    DuplicateEvidence duplicate_vote_evidence = 1;
  }
}

message EvidenceData {
  repeated Evidence evidence = 1 [(gogoproto.nullable) = false];
  // Volatile
  bytes hash = 2 [
    (gogoproto.customtype) = "github.com/tendermint/tendermint/libs/bytes.HexBytes",
    (gogoproto.customname) = "hash",
    (gogoproto.nullable)   = false
  ];
}

message Block {
  Header       header   = 1;
  Data         data     = 2;
  EvidenceData evidence = 3;
}
